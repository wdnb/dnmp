version: "3"

networks:
  default:

services:
#  nginx:
#    build:
#      context: ./services/nginx
#      args:
#        NGINX_VERSION: nginx:${NGINX_VERSION}
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
#    #container_name: nginx
#    ports:
#      - "${NGINX_HTTP_HOST_PORT}:80"
#      - "${NGINX_HTTPS_HOST_PORT}:443"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
#      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
#      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
#      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
#      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
#      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    restart: always
#    networks:
#      - default
#
#  php:
#    build:
#      context: ./services/php
#      args:
#        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
#        TZ: "$TZ"
#    #container_name: php
#    expose:
#      - 9501
#    extra_hosts:
#      - "www.site1.com:172.17.0.1"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default
#  php73:
#    build:
#      context: ./services/php
#      args:
#        PHP_VERSION: php:${PHP73_VERSION}-fpm-alpine
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP73_EXTENSIONS}
#        TZ: "$TZ"
#    #container_name: php73
#    expose:
#      - 9501
#    extra_hosts:
#      - "www.site1.com:172.17.0.1"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP73_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP73_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP73_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

#  php56:
#    build:
#      context: ./services/php
#      args:
#        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
#        TZ: "$TZ"
#    #container_name: php56
#    expose:
#      - 9501
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP56_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

#  php54:
#    build:
#      context: ./services/php54
#      args:
#        PHP_VERSION: php:${PHP54_VERSION}-fpm
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP54_EXTENSIONS}
#        TZ: "$TZ"
#    #container_name: php54
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP54_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP54_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP54_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default
#
#  mysql:
#    image: mysql:${MYSQL_VERSION}
#    #container_name: mysql
#    ports:
#      - "${MYSQL_HOST_PORT}:3306"
#    volumes:
#      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
#    restart: always
#    networks:
#      - default
#    environment:
#      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
#      TZ: "$TZ"
#
#  mysql5:
#    image: mysql:${MYSQL5_VERSION}
#    #container_name: mysql5
#    ports:
#      - "${MYSQL5_HOST_PORT}:3306"
#    volumes:
#      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
#    restart: always
#    networks:
#      - default
#    environment:
#      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
#      TZ: "$TZ"

#  openresty:
#    image:  openresty/openresty:${OPENRESTY_VERSION}
#    #container_name: openresty
#    ports:
#       - "${OPENRESTY_HTTP_HOST_PORT}:80"
#       - "${OPENRESTY_HTTPS_HOST_PORT}:443"
#    volumes:
#       - ${SOURCE_DIR}:/www/:rw
#       - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
#       - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
#       - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
#       - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
#       - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
#       - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    networks:
#      - default

  redis:
    image: redis:latest
    #container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default
      
  redisadmin:
    image: erikdubbelboer/phpredisadmin:latest
    ports:
      - "6380:80"
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=${REDIS_HOST_PORT}
      
#  memcached:
#    image: memcached:${MEMCACHED_VERSION}
#    #container_name: memcached
#    ports:
#      - "${MEMCACHED_HOST_PORT}:11211"
#    environment:
#       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
#    networks:
#      - default

#  rabbitmq:
#    image: rabbitmq:${RABBITMQ_VERSION}
#    #container_name: rabbitmq
#    restart: always
#    ports:
#      - "${RABBITMQ_HOST_PORT_C}:5672"
#      - "${RABBITMQ_HOST_PORT_S}:15672"
#    environment:
#       TZ: "$TZ"
#       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
#       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#    networks:
#          - default

#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin:latest
#    #container_name: phpmyadmin
#    ports:
#      - "${PHPMYADMIN_HOST_PORT}:80"
#    volumes:
#      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
#      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
#    networks:
#      - default
#    environment:
#      - PMA_HOST=mysql
#      - PMA_PORT=3306
#      - TZ=$TZ

#  phpredisadmin:
#    image: erikdubbelboer/phpredisadmin:latest
#    #container_name: phpredisadmin
#    ports:
#      - "${REDISMYADMIN_HOST_PORT}:80"
#    networks:
#      - default
#    environment:
#      - REDIS_1_HOST=redis
#      - REDIS_1_PORT=6379
#      - TZ=$TZ

#  mongodb:
#    image: mongo:${MONGODB_VERSION}
#    #container_name: mongodb
#    environment:
#        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
#        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
#        TZ: "$TZ"
#    volumes:
#      - ${DATA_DIR}/mongo:/data/db:rw
#      - ${DATA_DIR}/mongo_key:/mongo:rw
#    ports:
#       - "${MONGODB_HOST_PORT}:27017"
#    networks:
#       - default
#    command:
#       --auth

#  adminmongo:
#    image: mrvautin/adminmongo
#    #container_name: adminmongo
#    ports:
#      - "${ADMINMONGO_HOST_PORT}:1234"
#    environment:
#      - HOST=0.0.0.0
#      - DB_HOST=mongodb
#      - DB_PORT=27017
#    networks:
#      - default

#  elasticsearch:
#    build:
#      context: ./services/elasticsearch
#      args:
#        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#    #container_name: elasticsearch
#    environment:
#      - TZ=$TZ
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
#    hostname: elasticsearch
#    restart: always
#    ports:
#      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

#  kibana:
#    image: kibana:${KIBANA_VERSION}
#    #container_name: kibana
#    environment:
#      TZ: "$TZ"
#      elasticsearch.hosts: http://elasticsearch:9200
#      I18N_LOCALE: "${KIBANA_I18N_LOCALE}"
#    hostname: kibana
#    depends_on:
#      - elasticsearch
#    restart: always
#    ports:
#      - "${KIBANA_HOST}:5601"

#  logstash:
#    image: logstash:${LOGSTASH_VERSION}
#    #container_name: logstash
#    hostname: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    environment:
#      TZ: "$TZ"
#    ports:
#      - "${LOGSTASH_HOST_PORT_C}:9600"
#      - "${LOGSTASH_HOST_PORT_S}:5044"

#  node:
#    image: node:${NODE_VERSION}
#    environment:
#      - NODE_ENV=production
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#    expose:
#      - "8081"
#    networks:
#      - default
#    stdin_open: true
#    tty: true


#  supervisor:
#    build:
#      context: ./services/supervisor
#      args:
#        ALPINE_VERSION: alpine:${ALPINE_VERSION}
#        TZ: "$TZ"
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#    container_name: supervisor
#    ports:
#      - "${SUPERVISOR_HOST_PORT_C}:9001"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
#      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
#      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
#    command:
#      - /bin/sh
#      - -c
#      - |
#        supervisord -n -c /etc/supervisor/supervisord.conf
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

### PostgreSQL ###########################################
  postgres:
    build:
      context: ./services/postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
      - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
      - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
      - JUPYTERHUB_POSTGRES_INIT=${JUPYTERHUB_POSTGRES_INIT}
      - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}
      - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}
      - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}
      - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}
      - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}
      - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}
      - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}
      - POSTGRES_CONFLUENCE_INIT=${CONFLUENCE_POSTGRES_INIT}
      - POSTGRES_CONFLUENCE_DB=${CONFLUENCE_POSTGRES_DB}
      - POSTGRES_CONFLUENCE_USER=${CONFLUENCE_POSTGRES_USER}
      - POSTGRES_CONFLUENCE_PASSWORD=${CONFLUENCE_POSTGRES_PASSWORD}
    networks:
      - default

#### Gitlab ################################################
  gitlab:
    image: gitlab/gitlab-ee:latest
   #image: ulm0/gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_DOMAIN_NAME}'
        redis['enable'] = false
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['custom_gitlab_server_config'] = "set_real_ip_from 172.0.0.0/8;\nreal_ip_header X-Real-IP;\nreal_ip_recursive on;"
        postgresql['enable'] = false
        gitlab_rails['trusted_proxies'] = ['caddy','nginx','apache2']
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_database'] = 8
        gitlab_rails['db_host'] = '${GITLAB_POSTGRES_HOST}'
        gitlab_rails['db_username'] = '${GITLAB_POSTGRES_USER}'
        gitlab_rails['db_password'] = '${GITLAB_POSTGRES_PASSWORD}'
        gitlab_rails['db_database'] = '${GITLAB_POSTGRES_DB}'
        gitlab_rails['initial_root_password'] = '${GITLAB_ROOT_PASSWORD}'
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_HOST_SSH_PORT}
    volumes:
      - ${DATA_DIR}/gitlab/config:/etc/gitlab
      - ${DATA_DIR}/gitlab/data:/var/opt/gitlab
      - ${GITLAB_HOST_LOG_PATH}:/var/log/gitlab
    ports:
      - "${GITLAB_HOST_HTTP_PORT}:80"
      - "${GITLAB_HOST_HTTPS_PORT}:443"
      - "${GITLAB_HOST_SSH_PORT}:22"
    networks:
      - default
    depends_on:
      - redis
      - postgres


  gitlab-runner:
    image: gitlab/gitlab-runner:latest
   #image: klud/gitlab-runner
    environment:
      - CI_SERVER_URL=${GITLAB_CI_SERVER_URL}
      - REGISTRATION_TOKEN=${GITLAB_RUNNER_REGISTRATION_TOKEN}
      - RUNNER_NAME=${COMPOSE_PROJECT_NAME}-runner
      - REGISTER_NON_INTERACTIVE=${GITLAB_REGISTER_NON_INTERACTIVE}
      - RUNNER_EXECUTOR=shell
    volumes:
      - ${DATA_DIR}/gitlab/runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - default

### Portainer ################################################
  portainer:
    image: portainer/portainer:latest
    volumes:
      - ${DATA_DIR}/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - 9010:9000
    networks:
      - default
